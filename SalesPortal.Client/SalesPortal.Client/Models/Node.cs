// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace SalesPortal.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class Node : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The achievements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::SalesPortal.Client.Models.Achievement>? Achievements { get; set; }
#nullable restore
#else
        public List<global::SalesPortal.Client.Models.Achievement> Achievements { get; set; }
#endif
        /// <summary>The children property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::SalesPortal.Client.Models.Node>? Children { get; set; }
#nullable restore
#else
        public List<global::SalesPortal.Client.Models.Node> Children { get; set; }
#endif
        /// <summary>The commissions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::SalesPortal.Client.Models.Commission>? Commissions { get; set; }
#nullable restore
#else
        public List<global::SalesPortal.Client.Models.Commission> Commissions { get; set; }
#endif
        /// <summary>The id property</summary>
        public long? Id { get; set; }
        /// <summary>The monthlyReports property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::SalesPortal.Client.Models.MonthlyReport>? MonthlyReports { get; set; }
#nullable restore
#else
        public List<global::SalesPortal.Client.Models.MonthlyReport> MonthlyReports { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The parent property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SalesPortal.Client.Models.Node? Parent { get; set; }
#nullable restore
#else
        public global::SalesPortal.Client.Models.Node Parent { get; set; }
#endif
        /// <summary>The parentId property</summary>
        public long? ParentId { get; set; }
        /// <summary>The person property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SalesPortal.Client.Models.Person? Person { get; set; }
#nullable restore
#else
        public global::SalesPortal.Client.Models.Person Person { get; set; }
#endif
        /// <summary>The personId property</summary>
        public long? PersonId { get; set; }
        /// <summary>The sales property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::SalesPortal.Client.Models.Sale>? Sales { get; set; }
#nullable restore
#else
        public List<global::SalesPortal.Client.Models.Sale> Sales { get; set; }
#endif
        /// <summary>The salesGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SalesPortal.Client.Models.SalesGroup? SalesGroup { get; set; }
#nullable restore
#else
        public global::SalesPortal.Client.Models.SalesGroup SalesGroup { get; set; }
#endif
        /// <summary>The salesGroupId property</summary>
        public long? SalesGroupId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::SalesPortal.Client.Models.Node"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::SalesPortal.Client.Models.Node CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::SalesPortal.Client.Models.Node();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "achievements", n => { Achievements = n.GetCollectionOfObjectValues<global::SalesPortal.Client.Models.Achievement>(global::SalesPortal.Client.Models.Achievement.CreateFromDiscriminatorValue)?.AsList(); } },
                { "children", n => { Children = n.GetCollectionOfObjectValues<global::SalesPortal.Client.Models.Node>(global::SalesPortal.Client.Models.Node.CreateFromDiscriminatorValue)?.AsList(); } },
                { "commissions", n => { Commissions = n.GetCollectionOfObjectValues<global::SalesPortal.Client.Models.Commission>(global::SalesPortal.Client.Models.Commission.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetLongValue(); } },
                { "monthlyReports", n => { MonthlyReports = n.GetCollectionOfObjectValues<global::SalesPortal.Client.Models.MonthlyReport>(global::SalesPortal.Client.Models.MonthlyReport.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parent", n => { Parent = n.GetObjectValue<global::SalesPortal.Client.Models.Node>(global::SalesPortal.Client.Models.Node.CreateFromDiscriminatorValue); } },
                { "parentId", n => { ParentId = n.GetLongValue(); } },
                { "person", n => { Person = n.GetObjectValue<global::SalesPortal.Client.Models.Person>(global::SalesPortal.Client.Models.Person.CreateFromDiscriminatorValue); } },
                { "personId", n => { PersonId = n.GetLongValue(); } },
                { "sales", n => { Sales = n.GetCollectionOfObjectValues<global::SalesPortal.Client.Models.Sale>(global::SalesPortal.Client.Models.Sale.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesGroup", n => { SalesGroup = n.GetObjectValue<global::SalesPortal.Client.Models.SalesGroup>(global::SalesPortal.Client.Models.SalesGroup.CreateFromDiscriminatorValue); } },
                { "salesGroupId", n => { SalesGroupId = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::SalesPortal.Client.Models.Achievement>("achievements", Achievements);
            writer.WriteCollectionOfObjectValues<global::SalesPortal.Client.Models.Node>("children", Children);
            writer.WriteCollectionOfObjectValues<global::SalesPortal.Client.Models.Commission>("commissions", Commissions);
            writer.WriteLongValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::SalesPortal.Client.Models.MonthlyReport>("monthlyReports", MonthlyReports);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::SalesPortal.Client.Models.Node>("parent", Parent);
            writer.WriteLongValue("parentId", ParentId);
            writer.WriteObjectValue<global::SalesPortal.Client.Models.Person>("person", Person);
            writer.WriteLongValue("personId", PersonId);
            writer.WriteCollectionOfObjectValues<global::SalesPortal.Client.Models.Sale>("sales", Sales);
            writer.WriteObjectValue<global::SalesPortal.Client.Models.SalesGroup>("salesGroup", SalesGroup);
            writer.WriteLongValue("salesGroupId", SalesGroupId);
        }
    }
}
#pragma warning restore CS0618
